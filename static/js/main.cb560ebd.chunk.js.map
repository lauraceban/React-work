{"version":3,"sources":["Components/Header/Header.js/Audio/waltz.mp3","Components/Header/Header.js/Images/Blue.jpg","Components/Header/Header.js/Audio.js","Components/Header/Header.js/PageTitle.js","Components/Header/Header.js/Quote.js","Components/Header/Header.js/QuoteAuthor.js","Components/Nav/Nav.js/TasksLeft.js","Components/Nav/Nav.js/AddTask.js","Components/Nav/Nav.js/RemainingTitle.js","Components/Nav/Nav.js/CompletedTitle.js","Components/Nav/Nav.js/TaskItemCompleted.js","Components/Nav/Nav.js/Changes.js","Components/Nav/Nav.js/TaskItemRemaining.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Audio","className","controls","autoPlay","id","src","audioFile","React","Component","PageTitle","Quote","QuoteAuthor","imageFile","alt","TasksLeft","this","props","count","AddTask","type","placeholder","value","taskText","onChange","event","onTextEnter","target","onClick","onAdd","RemainingTitle","CompletedTitle","TaskItemCompleted","name","onDelete","Changes","class","TaskItemRemaining","onComplete","disabled","App","state","tasks","href","date","isCompleted","isDeleted","newTaskText","remainingTasks","filter","t","completedTasks","currentTasks","task","setState","length","text","concat","map","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cb560ebd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/waltz.6e128a0f.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Blue.cd4b80bd.jpg\";","import React from 'react';\r\nimport \"../Header.css/Audio.css\";\r\nimport audioFile from \"./Audio/waltz.mp3\"\r\n\r\nclass Audio extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <audio controls autoPlay>\r\n                        <source id=\"Soundtrack\" src={audioFile} />\r\n                    </audio>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Audio;\r\n","import React from 'react';\r\nimport \"../Header.css/PageTitle.css\";\r\n\r\nclass PageTitle extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <p id=\"PageTitle\">My \"To Do\" Application</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PageTitle;\r\n\r\n","import React from 'react';\r\nimport \"../Header.css/Quote.css\";\r\n\r\nclass Quote extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <div className=\"col-12\">\r\n                        <span id=\"Quotation\"> “He who is best prepared can best serve his moment of inspiration.”</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Quote;","import React from 'react';\r\nimport \"../Header.css/QuoteAuthor.css\";\r\nimport \"../Header.css/QuoteAuthorImage.css\";\r\nimport imageFile from \"./Images/Blue.jpg\";\r\n\r\nclass QuoteAuthor extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <div className=\"col-12\">\r\n                        <div id=\"QuoteAuthor\">Samuel Taylor Coleridge</div>\r\n                        <img id = \"BlueFlowersImage\" src={imageFile}  alt=\"Blue Flowers\" /> \r\n                        <br/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default QuoteAuthor;\r\n","import React from 'react';\r\nimport \"../Nav.css/TasksLeft.css\";\r\n\r\nclass TasksLeft extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <div className=\"col-12\">\r\n                        <p className=\"TasksLeft\">Tasks left: {this.props.count}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TasksLeft;\r\n\r\n","import React from 'react';\r\nimport \"../Nav.css/AddTask.css\";\r\n\r\n\r\nclass AddTask extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <div className=\"col-12\">\r\n                        <span>\r\n                            <input\r\n                                id=\"AddTaskInput\"\r\n                                type=\"text\"\r\n                                placeholder=\"I need to...\"\r\n                                value={this.props.taskText}\r\n                                onChange={(event) => this.props.onTextEnter(event.target.value)}\r\n                            />\r\n                        </span>\r\n\r\n                        <span>\r\n                            <button id=\"AddTaskButton\" onClick={this.props.onAdd}>Add a task</button>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddTask;\r\n\r\n","import React from 'react';\r\nimport \"../Nav.css/RemainingTitle.css\";\r\n\r\nclass RemainingTitle extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <div className = \"row\">\r\n                        <div className=\"col-12\">\r\n                            <h3><span className=\"RemainingTitle\">Remaining Tasks</span></h3> \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RemainingTitle;\r\n\r\n","import React from 'react';\r\nimport \"../Nav.css/CompletedTitle.css\";\r\n\r\nclass CompletedTitle extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <div className = \"row\">\r\n                        <div className=\"col-12\">\r\n                            <h3><span className=\"CompletedTitle\">Already Completed</span></h3> \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CompletedTitle;","import React from 'react';\r\nimport \"../Nav.css/TaskItem.css\";\r\n\r\nclass TaskItemCompleted extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-sm-8\">\r\n                        <span className=\"TaskItem\"> {this.props.name} </span>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-2\">\r\n                        <span><button className=\"DeleteButton\" onClick={this.props.onDelete}>Delete</button></span>\r\n                    </div>\r\n                </div>\r\n\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TaskItemCompleted;\r\n","import React from 'react';\r\nimport \"../Nav.css/Changes.css\";\r\n\r\nclass Changes extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <label id=\"Changes\"> Have you made any changes?</label>\r\n                </div>\r\n                <div class=\"col-12\">\r\n                    <button id=\"ChangesButton\">Update List</button>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Changes;\r\n\r\n","import React from 'react';\r\nimport \"../Nav.css/TaskItem.css\";\r\n\r\nclass TaskItemRemaining extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"col-12 col-sm-8\">\r\n                        <span className=\"TaskItem\"> {this.props.name} </span>\r\n                    </div>\r\n\r\n                    <div className=\"col-6 col-sm-2\">\r\n                        <span><button className=\"EmptyButton\" onClick={this.props.onComplete}></button></span>\r\n                    </div>\r\n\r\n                    <div className=\"col-6 col-sm-2\">\r\n                        <span><button disabled className=\"FadedDeleteButton\">Delete</button></span>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TaskItemRemaining;\r\n","import React from 'react';\nimport './App.css';\n\nimport Audio from './Components/Header/Header.js/Audio';\nimport PageTitle from './Components/Header/Header.js/PageTitle';\nimport Quote from './Components/Header/Header.js/Quote';\nimport QuoteAuthor from './Components/Header/Header.js/QuoteAuthor';\n\nimport TasksLeft from './Components/Nav/Nav.js/TasksLeft';\nimport AddTask from './Components/Nav/Nav.js/AddTask';\n\nimport RemainingTitle from './Components/Nav/Nav.js/RemainingTitle';\n\nimport CompletedTitle from './Components/Nav/Nav.js/CompletedTitle';\nimport TaskItemCompleted from './Components/Nav/Nav.js/TaskItemCompleted';\n\nimport Changes from './Components/Nav/Nav.js/Changes';\n\nimport TaskItemRemaining from './Components/Nav/Nav.js/TaskItemRemaining';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tasks: [\n        {\n          name: <>Do the <a href='https://www.youtube.com/watch?v=6SlwnNKsidw'> Christmas</a> shopping</>,\n          date: \"20-12-2019\",\n          isCompleted: false,\n          isDeleted: false\n        }, {\n          name: \"Attend medical appointment\",\n          date: \"20-12-2019\",\n          isCompleted: false,\n          isDeleted: false\n        }, {\n          name: \"Apply for travelling Visa\",\n          date: \"20-12-2019\",\n          isCompleted: false,\n          isDeleted: false\n        }, {\n          name: <>Attend the <a href='https://www.youtube.com/watch?v=K2snTkaD64Uw'>opera</a> performance</>,\n          date: \"20-12-2019\",\n          isCompleted: false,\n          isDeleted: false\n        }, {\n          name: <>Choose activities for each honeymoon <a href='https://www.nomadicmatt.com/travel-guides/indonesia-travel-tips/bali'>destination</a></>,\n          date: \"20-12-2019\",\n          isCompleted: false,\n          isDeleted: false\n        }, {\n          name: \"Submit honeymoon requests to travel concierge\",\n          date: \"20-12-2019\",\n          isCompleted: false,\n          isDeleted: false\n        }, {\n          name: <a href='https://www.youtube.com/watch?v=j3pdNPYRvwk'> Study </a>,\n          date: \"20-12-2019\",\n          isCompleted: true,\n          isDeleted: false\n        }, {\n          name: \"Complete homework\",\n          date: \"20-12-2019\",\n          isCompleted: true,\n          isDeleted: false\n        }, {\n          name: \"Submit homework\",\n          date: \"20-12-2019\",\n          isCompleted: true,\n          isDeleted: false\n        }\n      ],\n      newTaskText: \"\"\n    };\n  }\n  \n  render() {\n\n    const remainingTasks = this.state.tasks.filter(t => !t.isCompleted);\n    const completedTasks = this.state.tasks.filter(t => t.isCompleted);\n\n\n\n    const onDelete = (name) => () => { \n      const currentTasks = this.state.tasks.filter(task => task.name !== name);\n\n      this.setState({ tasks: currentTasks });\n    };\n\n\n\n    const onComplete = (name) => () => {\n      const currentTasks = this.state.tasks.map(task => {\n        if (task.name === name) {\n          task.isCompleted = true;\n        }\n\n        return task;\n      });\n\n      this.setState({ tasks: currentTasks });\n    };\n\n\n    const onAdd = () => {\n      const currentTasks = this.state.tasks.concat([{\n        name: this.state.newTaskText,\n        date: \"20-12-2019\",\n        isCompleted: false,\n        isDeleted: false\n      }]);\n\n      this.setState({\n        tasks: currentTasks,\n        newTaskText: \"\"\n      });\n    };\n    \n    \n    const onTextEnter = (text) => {\n      this.setState({ newTaskText: text });\n    };\n\n\n\n\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n\n          <div class=\"col\">\n            <Audio />;\n          </div>\n\n          <div class=\"col\">\n            <PageTitle />\n          </div>\n\n          <div class=\"col\">\n            <Quote />\n            <QuoteAuthor />\n          </div>\n\n          <div class=\"col\">\n            <TasksLeft count={remainingTasks.length} />\n            \n            <AddTask\n              taskText={this.state.newTaskText}\n              onTextEnter={onTextEnter}\n              onAdd={onAdd}\n            />\n          </div>\n\n          <div class=\"row\">\n            <div class=\"col\" id=\"TaskColumn\">\n              <RemainingTitle />\n            \n            <p>\n              {remainingTasks.map(task => {\n                return (\n                  <TaskItemRemaining \n                    name={task.name} \n                    date={task.date}\n                    onDelete={onDelete(task.name)}\n                    onComplete={onComplete(task.name)}\n                  />\n                );\n              })};\n            </p>   \n            \n            </div>\n\n            <div class=\"col\" >\n              <CompletedTitle />\n\n              {completedTasks.map(task => {\n                return (\n                  <TaskItemCompleted \n                    name={task.name} \n                    onDelete={onDelete(task.name)}\n                  />\n                );\n              })};\n            </div>\n\n          </div>\n\n          <div class=\"col\" id=\"ChangesColumn\">\n            <Changes />\n          </div>\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}